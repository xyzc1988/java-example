<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd"
       default-lazy-init="true">

    <!-- 通过注解，把URL映射到Controller上，该标签默认注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter -->
    <mvc:annotation-driven>
        <!-- 全局处理@responseBody 日期类型,返回可以使用@JsonFormat注解覆盖此配置 -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--  annotation默认的方法映射适配器  mvc:annotation-driven注册后可以省略以下配置
    <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <bean id="handlerAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	-->

    <!-- 静态资源由Web应用服务器默认的Servlet处理 -->
    <mvc:default-servlet-handler/>
    <!--
     <mvc:resources mapping="/css/**" location="/css/" />
     <mvc:resources mapping="/js/**" location="/js/" />
     <mvc:resources mapping="/html/**" location="/html/" />
     -->

    <!-- 扫描加载组装所以配置文件 context:component-scan注册后可以省略<context:annotation-config/>-->
    <!-- SpringMVC容器中只注册带有@controller注解的Bean,使用use-default-filters="false"排除其他注解的Bean,否则@service中事务会失效 -->
    <context:component-scan base-package="io.github.xyzc1988" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 视图解析器 -->
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <mvc:view-resolvers>
        <mvc:jsp prefix="/WEB-INF/views/" suffix=".jsp"/>
    </mvc:view-resolvers>

    <!-- 默认访问跳转到登录页面(即定义无需Controller的url<->view直接映射) -->
    <!-- <mvc:view-controller path="/" view-name="forward:/index.jsp"/>-->

    <!-- 自定义拦截链配置 -->
    <mvc:interceptors>
        <!--对所有的请求进行拦截-->
        <!--<beans:bean class="com.sunp.common.interceptor.Myinterceptor"/>-->
        <!--对特定的请求进行拦截-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/**/*.css"/>
            <mvc:exclude-mapping path="/**/*.js"/>
            <mvc:exclude-mapping path="/**/*.png"/>
            <mvc:exclude-mapping path="/**/*.gif"/>
            <mvc:exclude-mapping path="/**/*.jpg"/>
            <mvc:exclude-mapping path="/**/*.jpeg"/>
            <mvc:exclude-mapping path="/**/*.map"/>
            <mvc:exclude-mapping path="/**/*.woff2"/>
            <mvc:exclude-mapping path="/**/*.json"/>
            <mvc:exclude-mapping path="/**/*login*"/>
            <bean class="io.github.xyzc1988.interceptor.AuthorityInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 文件上传配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/> <!-- 默认编码 (ISO-8859-1) -->
        <property name="maxInMemorySize" value="10240"/> <!-- 最大内存大小 (10240) -->
        <property name="maxUploadSize" value="-1"/> <!-- 最大文件大小，-1为无限止(-1) -->
        <property name="uploadTempDir" value="upload/temp"/> <!-- 上传文件的临时路径 -->
    </bean>

    <!--SimpleMappingExceptionResolver实现异常处理 不适用于JSON请求 会覆盖其他异常处理方式-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        &lt;!&ndash; 定义默认的异常处理页面，当该异常类型的注册时使用 &ndash;&gt;
        <property name="defaultErrorView" value="error"/>
        &lt;!&ndash; 定义异常处理页面用来获取异常信息的变量名，默认名为exception &ndash;&gt;
        <property name="exceptionAttribute" value="ex"/>
        &lt;!&ndash; 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 &ndash;&gt;
        <property name="exceptionMappings">
            <props>
                <prop key="io.github.xyzc1988.exception.ApiException">/error/error</prop>
                &lt;!&ndash; 这里还可以继续扩展对不同异常类型的处理 &ndash;&gt;
            </props>
        </property>
    </bean>-->

    <!-- 实现HandlerExceptionResolver实现异常处理 覆盖@ExceptionHandler-->
    <!--<bean id="myExceptionHandler" class="io.github.xyzc1988.exception.MyExceptionHandler"/>-->
</beans>